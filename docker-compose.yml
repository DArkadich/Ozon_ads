services:
  ozon-ads-bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: ozon-ads-bot
    restart: unless-stopped
    
    # Environment variables from .env file
    env_file:
      - .env
    
    # Volumes for persistent data
    volumes:
      - ./logs:/app/logs:rw
      - ./reports:/app/reports:rw
      - ./data:/app/data:rw  # For any additional data files
    
    # Network configuration
    networks:
      - ozon-bot-network
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "from config import settings; print('Health OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: Redis for caching (if needed in future)
  redis:
    image: redis:7-alpine
    container_name: ozon-bot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - ozon-bot-network
    profiles:
      - with-redis

  # Optional: PostgreSQL for data storage (if needed in future)
  postgres:
    image: postgres:15-alpine
    container_name: ozon-bot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ozon_ads
      POSTGRES_USER: ozonbot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - ozon-bot-network
    profiles:
      - with-db

networks:
  ozon-bot-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data: